
//https://github.com/mrdoob/stats.js/blob/master/LICENSE
/**
 * @author mrdoob / http://mrdoob.com/
 */
!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?module.exports=factory():"function"==typeof define&&define.amd?define(factory):global.Stats=factory()}(this,(function(){"use strict";var Stats=function(){var mode=0,container=document.createElement("div");function addPanel(panel){return container.appendChild(panel.dom),panel}function showPanel(id){for(var i=0;i<container.children.length;i++)container.children[i].style.display=i===id?"block":"none";mode=id}container.id="stats",container.addEventListener("click",(function(event){event.preventDefault(),showPanel(++mode%container.children.length)}),!1);var beginTime=(performance||Date).now(),prevTime=beginTime,frames=0,fpsPanel=addPanel(new Stats.Panel("FPS","#0ff","#002")),msPanel=addPanel(new Stats.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var memPanel=addPanel(new Stats.Panel("MB","#f08","#201"));return showPanel(0),{REVISION:16,dom:container,addPanel:addPanel,showPanel:showPanel,begin:function(){beginTime=(performance||Date).now()},end:function(){frames++;var time=(performance||Date).now();if(msPanel.update(time-beginTime,200),time>=prevTime+1e3&&(fpsPanel.update(1e3*frames/(time-prevTime),100),prevTime=time,frames=0,memPanel)){var memory=performance.memory;memPanel.update(memory.usedJSHeapSize/1048576,memory.jsHeapSizeLimit/1048576)}return time},update:function(){beginTime=this.end()},domElement:container,setMode:showPanel}};return Stats.Panel=function(name,fg,bg){var min=1/0,max=0,round=Math.round,PR=round(window.devicePixelRatio||1),WIDTH=80*PR,HEIGHT=48*PR,TEXT_X=2*PR,TEXT_Y=2*PR,GRAPH_X=2*PR,GRAPH_Y=13*PR,GRAPH_WIDTH=76*PR,GRAPH_HEIGHT=33*PR,canvas=document.createElement("canvas");canvas.width=WIDTH,canvas.height=HEIGHT,canvas.style.cssText="width:80px;height:48px";var context=canvas.getContext("2d");return context.font="bold "+9*PR+"px Helvetica,Arial,sans-serif",context.textBaseline="top",context.fillStyle=bg,context.fillText(name,TEXT_X,TEXT_Y),context.fillRect(GRAPH_X,GRAPH_Y,GRAPH_WIDTH,GRAPH_HEIGHT),{dom:canvas,update:function(value,maxValue){min=Math.min(min,value),max=Math.max(max,value),context.clearRect(0,0,WIDTH,GRAPH_Y),context.globalAlpha=1,context.fillStyle=bg,context.fillText(round(value)+" "+name+" ("+round(min)+"-"+round(max)+")",TEXT_X,TEXT_Y),context.fillStyle=fg,context.drawImage(canvas,GRAPH_X+PR,GRAPH_Y,GRAPH_WIDTH-PR,GRAPH_HEIGHT,GRAPH_X,GRAPH_Y,GRAPH_WIDTH-PR,GRAPH_HEIGHT),context.fillRect(GRAPH_X+GRAPH_WIDTH-PR,GRAPH_Y,PR,GRAPH_HEIGHT),context.fillStyle=bg,context.fillRect(GRAPH_X+GRAPH_WIDTH-PR,GRAPH_Y,PR,round((1-value/maxValue)*GRAPH_HEIGHT))}}},Stats}));